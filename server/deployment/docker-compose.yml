x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: kong
  KONG_PG_HOST: kong-database
  KONG_PG_USER: kong
  KONG_PG_PASSWORD: kongpass

services:
  kong-migrations:
    image: kong/kong-gateway
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: kong/kong-gateway
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong-database
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure

  kong-config:
    image: kong/kong-gateway
    command: kong config db_import /usr/local/kong/declarative/kong.yaml
    depends_on:
      - kong-database
    environment:
      <<: *kong-env
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yaml
    networks:
      - kong-net
    restart: on-failure
    volumes:
      - ./config/kong.yaml:/usr/local/kong/declarative/kong.yaml

  kong-gateway:
    image: kong/kong-gateway
    user: "${KONG_USER:-kong}"
    networks:
      - kong-net
    environment:
      <<: *kong-env
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:${KONG_ADMIN_PORT:-8001}
      KONG_PROXY_LISTEN: 0.0.0.0:${KONG_PROXY_PORT:-8000}
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yaml
    ports:
      - "${KONG_PROXY_PORT:-8000}:8000"
      - "${KONG_ADMIN_PORT:-8001}:8001"
    depends_on:
      - kong-database
      - kong-config
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    volumes:
      - ./config/kong.yaml:/usr/local/kong/declarative/kong.yaml

  kong-database:
    image: postgres
    environment:
      <<: *kong-env
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - ../database/sources/models:/docker-entrypoint-initdb.d/
    networks:
      - kong-net

  database-service:
    build:
      context: ../database
      dockerfile: Dockerfile
    environment:
      <<: *kong-env
      PORT: 3000
      GATEWAY_HOST: kong-gateway:8001
      KONG_DELAY_MS: 10000
    networks:
      - kong-net
    depends_on:
      - kong-gateway
      - kong-database
    restart: on-failure:10

  user-management-service:
    build:
      context: ../user-management
      dockerfile: Dockerfile
    environment:
      <<: *kong-env
      PORT: 3000
      DATABASE_HOST: database-service:3000
      GATEWAY_HOST: kong-gateway:8001
      JWT_CONSUMER_NAME: jwt-consumer
      JWT_CONSUMER_SECRET: ${JWT_CONSUMER_SECRET:-jwtsecret}
      KONG_DELAY_MS: 10000
    networks:
      - kong-net
    depends_on:
      - kong-gateway
      - database-service
    restart: on-failure:10
    env_file:
      - ../user-management/.env

  service-management-service:
    build:
      context: ../service-management
      dockerfile: Dockerfile
    environment:
      <<: *kong-env
      PORT: 3000
      DATABASE_HOST: database-service:3000
      GATEWAY_HOST: kong-gateway:8001
      JWT_CONSUMER_NAME: jwt-consumer
      KONG_DELAY_MS: 10000
    networks:
      - kong-net
    depends_on:
      - kong-gateway
      - database-service
    restart: on-failure:10
    env_file:
      - ../service-management/.env

  action-service:
    build:
      context: ../action
      dockerfile: Dockerfile
    environment:
      <<: *kong-env
      PORT: 3000
      DATABASE_HOST: database-service:3000
      KONG_DELAY_MS: 10000
    networks:
      - kong-net
    depends_on:
      - kong-gateway
      - database-service
    restart: on-failure:10

  reaction-service:
    build:
      context: ../reaction
      dockerfile: Dockerfile
    environment:
      <<: *kong-env
      PORT: 3000
      DATABASE_HOST: database-service:3000
      SERVICE_MANAGEMENT_HOST: service-management-service:3000
      KONG_DELAY_MS: 10000
    networks:
      - kong-net
    depends_on:
      - kong-gateway
      - database-service
    restart: on-failure:10

  area-composition-service:
    build:
      context: ../area-composition
      dockerfile: Dockerfile
    environment:
      <<: *kong-env
      PORT: 3000
      DATABASE_HOST: database-service:3000
      ACTION_HOST: action-service:3000
      REACTION_HOST: reaction-service:3000
      KONG_DELAY_MS: 10000
    networks:
      - kong-net
    depends_on:
      - kong-gateway
      - database-service
    restart: on-failure:10

networks:
  kong-net:
    driver: bridge
